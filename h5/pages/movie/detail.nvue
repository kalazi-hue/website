<template>
	<view class="player-page">
		<view class="player">
			<view class="h5_player" v-if="isH5"> <!-- H5 dplayer 播放器-->
				<div id="dplayer"></div>
			</view>
			
			<view class="video-wrapper" v-else> <!-- APP uni 播放器-->
				<video 
					id="myVideo"
					class="video"
					:src="playerUrl" 
					page-gesture="true"
					object-fit="none"
					controls
					:title="videoDetail.title"
					:autoplay="false"
				></video>
			</view>
		</view>
		
		<view class="player-bottom">

			<text class="video-title">片名：{{ videoDetail.title }}</text>
			
			<view class="ico-list">
				<view class="action-item">
					<view class="icons"><image src="/static/images/icons/ico-eye-play.png" mode="widthFix" style="width: 52rpx;"></image></view>
					<text class="ico-list-item">{{ videoDetail.playCount || 0 }}次播放</text>	
				</view>
				<view class="action-item" @tap="openFeedback">
					<view class="icons"><image src="/static/images/icons/ico-write-play.png" mode="widthFix" style="width:36rpx;"></image></view>
					<text class="ico-list-item">播放反馈</text>
				</view>
				<view class="action-item" @tap="addLike">
					<view class="icons">
						<image src="/static/images/icons/ico-like-play.png" mode="widthFix" style="width:40rpx;"></image>
					</view>
					<text class="ico-list-item">{{ videoDetail.star || 0 }}次点赞</text>	
				</view>
				<view class="action-item" @tap="share" v-clipboard:copy="shareUrl" v-clipboard:success="onCopy">
					<view class="icons"><image src="/static/images/icons/ico-share-play.png" mode="widthFix" style="width:36rpx;"></image></view>
					<text class="ico-list-item">分享好友</text>
					<!-- #ifdef H5 -->
					<input type="hidden" v-text="shareUrl" style="display: none;">
					<!-- #endif -->
				</view>
			</view>
 
			<view class="video-info">
				<text class="info-item">视频于 {{ filterCreatedTime(videoDetail.createdAt) }} 上传</text>
				<view class="info-item">
					<view class="tag-list">
						<text v-for="(item, n) in filterTags(videoDetail.tags)" @click="toSearch(item)" :key="n" v-if="item" class="tag"> {{ item }}</text>
					</view>
				</view>
			</view>
			
			<!-- 播放器下方banner -->
			<!-- <view class="player-ad">
				<image 
					src="https://cbu01.alicdn.com/img/ibank/2020/549/572/21651275945_1323090674.jpg" 
					@tap="open_url('')" 
					mode="aspectFit"
					class="uni-image">
				</image>						
			</view> -->
			
		</view>
			
		<!-- 猜你喜欢 -->
		<video-list-home :showRecommendList="true" />
		
		<!-- 播放反馈弹窗 -->
		<uni-popup ref="feedback" type="bottom">
			<view class="feeback">
				<text class="fb-title">请选择反馈内容</text>
				<radio-group @change="radioChange">
					<label class="uni-list-cell uni-list-cell-pd" v-for="(item, index) in items" :key="item.value">
						<view>
							<radio :value="item.name" :checked="index === current" />
						</view>
						<view class="fb-name">{{item.name}}</view>
					</label>
				</radio-group>
				<button class="btn-feedback" @tap="submitFeedback">提交反馈</button>
			</view>
		</uni-popup>
		 
	</view>
</template>

<script>
	var that
	import api from '@/api'
	/* #ifdef H5 */
	import DPlayer from 'dplayer';
	/* #endif */
	// import hotTags from '@/components/common/hotTags.vue';
	import videoListHome from '@/components/videoListHome';
	import uniPopup from '@/components/uniapp/uni-popup/uni-popup.vue'
	export default {
	    components: {
	        uniPopup,
			videoListHome,
			/* #ifdef H5 */
			DPlayer,
			/* #endif */
		},
		data() {
			return {
				isH5: false,
				playerUrl: '',
				loading: true,
				videoDetail: [],
				videoId: null,
				page: 1,
				pageSize: 10,
				tags: '',
				shareUrl: '',
				flag: true,
				flagFK: true,
				items: [{
						value: 'kadun',
						name: '轻微卡顿'
					}, {
						value: 'henka',
						name: '严重卡顿'
					}, {
						value: 'wufa',
						name: '无法播放'
					}
				],
				current: ''
			}
		},
		onLoad(option) {
			// 目前在某些平台参数会被主动 decode，暂时这样处理。
			try {
				this.videoId = JSON.parse(decodeURIComponent(option.videoId));
			} catch (error) {
				this.videoId = JSON.parse(option.videoId);
			}
			this.getVideoDetail()
            /* #ifdef H5 */
			this.isH5 = true
            /* #endif  */

		},
        onReady() {
			that = this
            /* #ifdef H5 */
			this.isH5 = true
			console.log(this.videoDetail.playUrl)
			this.initH5Dplayer(this.videoDetail.playUrl)
			
			// 分享链接
			const curPage = window.location.href
			this.shareUrl = curPage
            /* #endif  */
			
			/* #ifndef H5 */
			this.isH5 = false
			/* #endif */
        },
		methods: {
			getVideoDetail () {
				let that = this
				let params = {
					ID: that.videoId
				}
				uni.request({
					method: 'GET',
					url: `${ api.configApi }/movie/findMovie`,
					data: params,
					success: (res) => {
						if (res.data.code === 0) {
						  that.videoDetail = res.data.data.removie
						}
					}
				});
			},
			addLike () {
				let that = this
				if (!this.flag) {
					uni.showToast({
						title: '不能连续点赞',
						icon:'none',
						animation: true,
						duration: 1500
					});
					return false
				}
				this.flag = false
				this.videoDetail.star += 1
				let params = {
					id: that.videoDetail.ID
				}
				uni.request({
					method: 'POST',
					url: `${ api.configApi }/movie/movieApproval`,
					data: params,
					success: (res) => {
						setTimeout(() => {
							that.flag = true
						},20000)
					}
				});
			},
			radioChange: function(evt) {
				console.log(evt.detail.value)
				let that = this
				for (let i = 0; i < that.items.length; i++) {
					if (that.items[i].name === evt.detail.value) {
						that.current = that.items[i].name;
						break;
					}
				}
			},
			submitFeedback () {
				if (!this.flagFK) {
					uni.showToast({
						title: '已反馈过',
						icon:'none',
						animation: true,
						duration: 1500
					});
					setTimeout(() => {
						this.closeFeedback()					
					}, 1200)
					return false
				}
				if (this.current === '') {
					uni.showToast({
						title: '请选择原因',
						icon:'none',
						animation: true,
						duration: 1500
					});
					return false
				}
				let params = {
					createdAt: this.videoDetail.createdAt,
					movieId: this.videoDetail.ID,
					playUrl: this.videoDetail.playUrl,
					title: this.videoDetail.title,
					type: this.current,
					updatedAt: this.videoDetail.updatedAt
				}
				setTimeout(() => {
					this.closeFeedback()					
				}, 1200)
				this.flagFK = false
				uni.request({
					method: 'POST',
					url: `${ api.configApi }/playFeedback/createPlayFeedback`,
					data: params,
					success: (res) => {
						uni.showToast({
							title: '提交成功',
							animation: true,
							duration: 1500
						});
						setTimeout(() => {
							that.flagFK = true
						},20000)
					}
				});
			},
			initH5Dplayer(url) {
				 const dp = new DPlayer({
					 // container: _this.$refs.dplayer,
					container: document.getElementById('dplayer'),
					video: {
						quality: [{ // 多清晰度
							 url: this.playerUrl,
							 type: 'hls'
						}],
						pic: this.videoDetail.cover,
						playbackSpeed: [0.75, 1,1.5, 2],
						hotkey: true,
						airplay: true,
						autoplay: false,
						screenshot: true,
						defaultQuality: 0
					},
					preload: 'auto',
					lang: 'zh-cn',
					theme: '#fff'
				 });
				 dp.play()
				 // dp.on('play', function () {
					// dp.fullScreen.request('browser'); // 播放时全屏
				 // });
			},
			open_url (url) {
			   //#ifdef H5
					window.open(url)
			   //#endif
			   
			   //#ifndef H5
				   plus.runtime.openURL(url)
			   //#endif				
			},
			filterCreatedTime (date) {
				if (date) {
					return /\d{4}-\d{1,2}-\d{1,2}/g.exec(date)[0]
				}
			},
			filterTags (val) {
				if (val) {
					let tagArr = val.split(',')
					return tagArr
				}
			},
			toSearch (name) {
				uni.navigateTo({
					url: '/pages/movie/search?tag=' + name
				});
			},
			getCurPage(){
				let pages = getCurrentPages();
				let curPage = pages[pages.length-1];
				return curPage
			},
			share () {
			    //#ifndef H5
				uni.shareWithSystem({
					summary: '好看的电影分享',
					href: 'https://uniapp.dcloud.io',
					success(){
						// 分享完成，请注意此时不一定是成功分享
					},
					fail(){
						// 分享失败
					}
				})
			    //#endif
			},				
			onCopy (e) { // 复制成功
				uni.showToast({
					title: '已复制,请分享',
					animation: true,
					duration: 1500
				});	
			},
			onError (e) { // 复制失败
				uni.showToast({
					title: '请快速点击3次重试!',
					icon:'none',
					animation: true,
					duration: 1500
				});	
			},
			openFeedback (){
				this.$refs.feedback.open()
			},
			closeFeedback (){
				this.$refs.feedback.close()
			}
		}
	}
</script>

<style>
.uni-list-cell-pd {
    /* #ifndef APP-NVUE */
	display: flex;
	/* #endif */
	justify-content: center;
    align-items: center;
	width: 550rpx;
	padding: 15rpx 0;
	border-radius: 5px;
	margin: 20rpx 0 30rpx 100rpx;	
    background-color: #eee;
}
</style>

<style scoped>
.report-title,
.uni-label,
.tag-list,
.ico-list,
.tab-player,
.info-item {
    flex-direction: row;
} 
.player-bottom {
	padding: 30rpx;
}
.video-title {
	color: #fff;
	font-size: 36upx;
	text-align: left;
	margin: 15upx 0; 
}
.ico-list {
	margin: 30upx 0 0;
	justify-content: space-between;
}
.ico-list-item {
	color: #999;	
	margin: 15upx 0; 
	font-size: 24upx;
}
.action-item {
    align-items: center;
}
.info-item {
	color: #909399;
	font-size: 28upx;
    text-align: left;
	margin: 15upx 0; 
}
 
.tag {
    font-size: 26upx;
	border-width: 1px;
	border-style: solid;
	border-color: #d11dfc;
    border-radius: 30px;
    padding: 8upx 20upx;
    margin: 8upx 4upx;
}
.player-ad {
	margin: 15upx 0; 
	border-radius: 5px;
	overflow: hidden;
}

.uni-image {
    width: 750upx;
	height: 120upx;
	border-radius: 5px;
}
.icons {
	height: 48upx;
}
.btn-feedback {
	color: #fff !important;
	width: 550rpx;
	margin: 20rpx 0 30rpx 100rpx;	
	background-color: #007AFF;
	border-color: #007AFF;
}
.feeback {
    width: 750rpx;
    background-color: #fff;
}
.fb-title {
	margin: 30rpx 0 20rpx 100rpx;	
	opacity: 0.7;
	color: #000;
}
.fb-name {
	color: #000;
}
</style>
